{"version":3,"sources":["Components/Team.js","Components/Introduction.js","App.js","serviceWorker.js","index.js"],"names":["Team","className","src","Component","Introduction","id","data-section","style","backgroundImage","color","href","target","rel","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6QA2DeA,G,mLAvDR,OACC,6BACA,yBAAKC,UAAU,QACb,4CAEF,yBAAKA,UAAU,OACb,uCACA,wCACA,yBAAKC,IAAI,oBAEX,yBAAKD,UAAU,OAEb,uCACA,yBAAKC,IAAI,sBAEX,yBAAKD,UAAU,OACf,uCACE,4CACA,yBAAKC,IAAI,uBAEX,yBAAKD,UAAU,OAEb,6CACA,yBAAKC,IAAI,uBAEX,yBAAKD,UAAU,OAEb,gDACA,yBAAKC,IAAI,oBAEX,yBAAKD,UAAU,OAEb,6CACA,yBAAKC,IAAI,uBAEX,yBAAKD,UAAU,OAEb,4CACA,yBAAKC,IAAI,uBAEX,yBAAKD,UAAU,OAEb,2CACA,yBAAKC,IAAI,uBAEX,yBAAKD,UAAU,OAEb,kDACA,yBAAKC,IAAI,0B,GAlDAC,cCAEC,E,uKAEjB,OACE,6BACE,6BAASC,GAAG,gBAAgBJ,UAAU,gBAAgBK,eAAa,QACjE,yBAAKL,UAAU,4BACb,wBAAIA,UAAU,UACZ,wBAAIM,MAAO,CAACC,gBAAiB,wBAC3B,yBAAKP,UAAU,YACf,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,wFACb,yBAAKA,UAAU,mCACf,yBAAKA,UAAU,eASvB,wBAAIM,MAAO,CAACC,gBAAiB,2BAC3B,yBAAKP,UAAU,YACf,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,wFACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,QACb,4BAAK,0BAAMQ,MAAO,SAAb,6BAA+C,+BACpD,2BAAG,uBAAGR,UAAU,4BAA4BS,KAAK,wCAAwCC,OAAO,SAASC,IAAI,uBAAsB,0BAAMH,MAAO,SAAb,cAAhI,IAAuK,uBAAGR,UAAU,4BAOnM,wBAAIM,MAAO,CAACC,gBAAiB,0BAC3B,yBAAKP,UAAU,YACf,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,wFACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,QACb,4BAAI,0BAAMQ,MAAM,SAAZ,iDAAwE,uBAAGR,UAAU,cAAzF,KACA,2BAAG,uBAAGA,UAAU,4BAA4BS,KAAK,2CAA2CC,OAAO,SAASC,IAAI,uBAAsB,0BAAMH,MAAM,SAAZ,iBAAwC,uBAAGR,UAAU,8B,GA7C3KE,aC+B3BU,E,uKAxBX,OAKA,yBAAKR,GAAG,iBACP,kBAAC,EAAD,MAGK,yBAAKJ,UAAU,OACd,kBAAC,EAAD,Y,GAZOE,aCKEW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.12ece0d2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Team.css';\r\nclass Team extends Component{\r\n   render(){\r\n       return(\r\n        <div>\r\n        <div className=\"team\">\r\n          <h1>POWER TEAM!</h1>\r\n        </div>\r\n        <div className=\"mem\">\r\n          <h1>MENTORS</h1>\r\n          <p>JAI JOHN </p>\r\n          <img src=\"images/sir.jpg\"/>\r\n        </div>\r\n        <div className=\"mem\">\r\n          \r\n          <p>SINDHU N</p>\r\n          <img src=\"images/ma'am.jpg\"/>\r\n        </div>\r\n        <div className=\"mem\">\r\n        <h1>MEMBERS</h1>\r\n          <p>ANNIE SAJAYAN</p>\r\n          <img src=\"images/as (2).jpg\"/>\r\n        </div>\r\n        <div className=\"mem\">\r\n          \r\n          <p>ASWINI KAMMATH</p>\r\n          <img src=\"images/as (1).jpg\"/>\r\n        </div>\r\n        <div className=\"mem\">\r\n         \r\n          <p>MALAVIKA KRISHNAN</p>\r\n          <img src=\"images/pic.jpg\"/>\r\n        </div>\r\n        <div className=\"mem\">\r\n         \r\n          <p>MANAL   JALEEL</p>\r\n          <img src=\"images/as (3).jpg\"/>\r\n        </div>\r\n        <div className=\"mem\">\r\n         \r\n          <p>VAISAKH MOHAN</p>\r\n          <img src=\"images/as (4).jpg\"/>\r\n        </div>\r\n        <div className=\"mem\">\r\n         \r\n          <p>SEBIN WILSON</p>\r\n          <img src=\"images/as (5).jpg\"/>\r\n        </div>\r\n        <div className=\"mem\">\r\n         \r\n          <p>ALINA ANNIE FURTADO</p>\r\n          <img src=\"images/last.jpg\"/>\r\n        </div>\r\n        \r\n      </div>\r\n       );\r\n   }\r\n}\r\nexport default Team;","import React, { Component } from 'react'\r\n\r\nexport default class Introduction extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <section id=\"colorlib-hero\" className=\"js-fullheight\" data-section=\"home\">\r\n          <div className=\"flexslider js-fullheight\">\r\n            <ul className=\"slides\">\r\n              <li style={{backgroundImage: 'url(images/pak.png)'} }>\r\n                <div className=\"overlay\" />\r\n                <div className=\"container-fluid\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6 col-md-offset-3 col-md-pull-3 col-sm-12 col-xs-12 js-fullheight slider-text\">\r\n                      <div className=\"slider-text-inner js-fullheight\">\r\n                      <div className=\"enter\">\r\n                          \r\n                          \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n              <li style={{backgroundImage: 'url(images/blog-3.jpg)'}}>\r\n                <div className=\"overlay\" />\r\n                <div className=\"container-fluid\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6 col-md-offset-3 col-md-pull-3 col-sm-12 col-xs-12 js-fullheight slider-text\">\r\n                      <div className=\"slider-text-inner\">\r\n                        <div className=\"desc\">\r\n                          <h1 ><font color =\"white\">Know more about ParksGlove<br /></font></h1>\r\n                          <p><a className=\"btn btn-primary btn-learn\" href=\" http://alinafurtado.github.io/final/\" target=\"_blank\" rel=\"noopener noreferrer\"><font color =\"white\">CLICK HERE</font> <i className=\"icon-briefcase3\" /></a></p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n              <li style={{backgroundImage: 'url(images/img-5.jpg)'}}>\r\n                <div className=\"overlay\" />\r\n                <div className=\"container-fluid\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6 col-md-offset-3 col-md-pull-3 col-sm-12 col-xs-12 js-fullheight slider-text\">\r\n                      <div className=\"slider-text-inner\">\r\n                        <div className=\"desc\">\r\n                          <h1><font color=\"white\">Check out our venture by visiting the Gallery</font><i className=\"icon-book\" /> </h1>\r\n                          <p><a className=\"btn btn-primary btn-learn\" href=\"https://alinafurtado.github.io/fin_gall/\" target=\"_blank\" rel=\"noopener noreferrer\"><font color=\"white\">View Gallery </font><i className=\"icon-book\" /></a></p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </section>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\n//import NewComponent from './components/port'\nimport Team from './Components/Team';\nimport Introduction from './Components/Introduction'\n\n\nclass App extends Component {\n  render() {\n    return (\n      \n      \n        \n         \t\n\t\t\t\t<div id=\"colorlib-main\">\n\t\t\t\t\t<Introduction></Introduction>\n\n\t\t\t\t  \n          <div className=\"App\"> \n           <Team/>\n            \n          </div>\n          \n        </div>\n          \n      \t\n        \n      \n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}